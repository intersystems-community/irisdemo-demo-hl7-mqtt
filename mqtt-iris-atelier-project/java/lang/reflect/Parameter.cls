Class java.lang.reflect.Parameter Extends java.lang.reflect.AnnotatedElement [ ProcedureBlock ]
{

Parameter IMPORTTIMESTAMP As STRING = "2019-01-14 21:02:00.0";

Method isNamePresent() As %ObjectHandle
{
	Quit ..%IR("isNamePresent")
}

Method getDeclaringExecutable() As %ObjectHandle
{
	Quit ..%IR("getDeclaringExecutable")
}

Method getName() As %ObjectHandle
{
	Quit ..%IR("getName")
}

Method isVarArgs() As %ObjectHandle
{
	Quit ..%IR("isVarArgs")
}

Method isSynthetic() As %ObjectHandle
{
	Quit ..%IR("isSynthetic")
}

Method getAnnotations() As %ObjectHandle
{
	Quit ..%IR("getAnnotations")
}

Method getParameterizedType() As %ObjectHandle
{
	Quit ..%IR("getParameterizedType")
}

Method getDeclaredAnnotations() As %ObjectHandle
{
	Quit ..%IR("getDeclaredAnnotations")
}

Method isImplicit() As %ObjectHandle
{
	Quit ..%IR("isImplicit")
}

///p0: class java.lang.Class
Method getAnnotationsByType(ByRef p0 As %ObjectHandle) As %ObjectHandle
{
	Quit ..%IR("getAnnotationsByType",.p0)
}

///p0: class java.lang.Class
Method getAnnotation(ByRef p0 As %ObjectHandle) As %ObjectHandle
{
	Quit ..%IR("getAnnotation",.p0)
}

///p0: class java.lang.Class
Method getDeclaredAnnotationsByType(ByRef p0 As %ObjectHandle) As %ObjectHandle
{
	Quit ..%IR("getDeclaredAnnotationsByType",.p0)
}

Method getType() As %ObjectHandle
{
	Quit ..%IR("getType")
}

Method hashCode() As %ObjectHandle
{
	Quit ..%IR("hashCode")
}

///p0: class java.lang.Object
Method equals(ByRef p0 As %ObjectHandle) As %ObjectHandle
{
	Quit ..%IR("equals",.p0)
}

///p0: class java.lang.Class
Method getDeclaredAnnotation(ByRef p0 As %ObjectHandle) As %ObjectHandle
{
	Quit ..%IR("getDeclaredAnnotation",.p0)
}

Method toString() As %ObjectHandle
{
	Quit ..%IR("toString")
}

Method getModifiers() As %ObjectHandle
{
	Quit ..%IR("getModifiers")
}

Method getAnnotatedType() As %ObjectHandle
{
	Quit ..%IR("getAnnotatedType")
}

}
